/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package esportsapp;

import java.awt.Color;
import java.util.ArrayList;
import javax.swing.JOptionPane;
import javax.swing.JTabbedPane;
import java.io.File;
import java.io.IOException;
import javax.swing.JColorChooser;

/**
 *
 * @author User
 */

public class EsportsGUI extends javax.swing.JFrame {

    /**
     * Creates new form EsportsGUI
     */
    public EsportsGUI() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;

        MainPanel = new javax.swing.JPanel();
        ODWButton = new javax.swing.JButton();
        TeamTabbedPane = new javax.swing.JTabbedPane();
        EventTabbedPane = new javax.swing.JTabbedPane();
        Menu = new javax.swing.JMenuBar();
        FileMenu = new javax.swing.JMenu();
        NewTeamButton = new javax.swing.JMenuItem();
        NewEventButton = new javax.swing.JMenuItem();
        jSeparator1 = new javax.swing.JPopupMenu.Separator();
        ExitMenuButton = new javax.swing.JMenuItem();
        OptionsMenu = new javax.swing.JMenu();
        ColorMenuButton = new javax.swing.JMenuItem();
        AlwaysOnTopMenuCheck = new javax.swing.JCheckBoxMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Esports Manager");
        setAutoRequestFocus(false);
        setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        setPreferredSize(new java.awt.Dimension(1280, 720));
        getContentPane().setLayout(new java.awt.GridLayout(1, 0));

        MainPanel.setBackground(new java.awt.Color(255, 69, 0));
        java.awt.GridBagLayout MainPanelLayout = new java.awt.GridBagLayout();
        MainPanelLayout.columnWidths = new int[] {0, 5, 0, 5, 0, 5, 0, 5, 0};
        MainPanelLayout.rowHeights = new int[] {0, 5, 0, 5, 0, 5, 0};
        MainPanel.setLayout(MainPanelLayout);

        ODWButton.setText("Open Display Window");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.gridwidth = 5;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        MainPanel.add(ODWButton, gridBagConstraints);

        TeamTabbedPane.setTabPlacement(javax.swing.JTabbedPane.LEFT);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        MainPanel.add(TeamTabbedPane, gridBagConstraints);

        EventTabbedPane.setTabPlacement(javax.swing.JTabbedPane.LEFT);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 6;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        MainPanel.add(EventTabbedPane, gridBagConstraints);

        getContentPane().add(MainPanel);

        FileMenu.setText("File");

        NewTeamButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/esportsapp/newteam.png"))); // NOI18N
        NewTeamButton.setText("New Team");
        NewTeamButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                NewTeamButtonActionPerformed(evt);
            }
        });
        FileMenu.add(NewTeamButton);

        NewEventButton.setText("New Event");
        NewEventButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                NewEventButtonActionPerformed(evt);
            }
        });
        FileMenu.add(NewEventButton);
        FileMenu.add(jSeparator1);

        ExitMenuButton.setText("Exit");
        ExitMenuButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ExitMenuButtonActionPerformed(evt);
            }
        });
        FileMenu.add(ExitMenuButton);

        Menu.add(FileMenu);

        OptionsMenu.setText("Options");

        ColorMenuButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/esportsapp/colorpicker.png"))); // NOI18N
        ColorMenuButton.setText("Background Color");
        ColorMenuButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ColorMenuButtonActionPerformed(evt);
            }
        });
        OptionsMenu.add(ColorMenuButton);

        AlwaysOnTopMenuCheck.setText("Always On Top");
        AlwaysOnTopMenuCheck.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                AlwaysOnTopMenuCheckActionPerformed(evt);
            }
        });
        OptionsMenu.add(AlwaysOnTopMenuCheck);

        Menu.add(OptionsMenu);

        setJMenuBar(Menu);

        setSize(new java.awt.Dimension(736, 519));
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void NewTeamButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_NewTeamButtonActionPerformed
        // TODO add your handling code here:
		String name = JOptionPane.showInputDialog(this, "Team Name:");
		
		if (name == null || name.equals("")) {
			return;
		} else {
			Boolean[] name_taken = {false};
			Team.TeamList.forEach((t) -> {
				if (t.TeamName.equals(name)) {
					JOptionPane.showMessageDialog(this, "Team Name \"%\" is already in use".replace("%", name));
					name_taken[0] = true;
					return;
				}
			});
			if (!name_taken[0]) new Team(name);
			
		}
		
    }//GEN-LAST:event_NewTeamButtonActionPerformed

    private void NewEventButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_NewEventButtonActionPerformed
        // TODO add your handling code here:
		String name = JOptionPane.showInputDialog(this, "Event Name:");
		
		if (name == null || name.equals("")) {
			return;
		} else {
			Boolean[] name_taken = {false};
			Event.EventList.forEach((e) -> {
				if (e.EventName.equals(name)) {
					JOptionPane.showMessageDialog(this, "Event Name \"%\" is already in use".replace("%", name));
					name_taken[0] = true;
					return;
				}
			});
			if (!name_taken[0]) new Event(name);
			
		}
		
    }//GEN-LAST:event_NewEventButtonActionPerformed

    private void AlwaysOnTopMenuCheckActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_AlwaysOnTopMenuCheckActionPerformed
        // TODO add your handling code here:
		this.setAlwaysOnTop(AlwaysOnTopMenuCheck.isSelected());
    }//GEN-LAST:event_AlwaysOnTopMenuCheckActionPerformed

    private void ColorMenuButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ColorMenuButtonActionPerformed
        // TODO add your handling code here:
        Color selected_color = JColorChooser.showDialog(this, "Choose Background Color", Color.decode("0xFF4500"));
		if (selected_color != null) MainPanel.setBackground(selected_color);
    }//GEN-LAST:event_ColorMenuButtonActionPerformed

    private void ExitMenuButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ExitMenuButtonActionPerformed
        // TODO add your handling code here:
		this.dispose();
    }//GEN-LAST:event_ExitMenuButtonActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Windows".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(EsportsGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(EsportsGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(EsportsGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(EsportsGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new EsportsGUI().setVisible(true);
            }
        });
		
		//create default team and event
		new Team("Team1");
		new Event("Event1");
		
    }
	
	//returns the teams tabbed pane to the Team constructor
	public static JTabbedPane getTeamTabbedPane() {
		return TeamTabbedPane;
	}
	
	//returns the events tabbed pane to the Event constructor
	public static JTabbedPane getEventTabbedPane() {
		return EventTabbedPane;
	}

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JCheckBoxMenuItem AlwaysOnTopMenuCheck;
    private javax.swing.JMenuItem ColorMenuButton;
    public static javax.swing.JTabbedPane EventTabbedPane;
    private javax.swing.JMenuItem ExitMenuButton;
    private javax.swing.JMenu FileMenu;
    private javax.swing.JPanel MainPanel;
    private javax.swing.JMenuBar Menu;
    private javax.swing.JMenuItem NewEventButton;
    private javax.swing.JMenuItem NewTeamButton;
    private javax.swing.JButton ODWButton;
    private javax.swing.JMenu OptionsMenu;
    public static javax.swing.JTabbedPane TeamTabbedPane;
    private javax.swing.JPopupMenu.Separator jSeparator1;
    // End of variables declaration//GEN-END:variables
}
