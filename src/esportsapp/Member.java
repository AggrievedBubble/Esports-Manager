/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package esportsapp;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import java.awt.*;
import javax.swing.*;

/**
 *
 * @author User
 */
public class Member extends javax.swing.JPanel implements EsportsInterface<Member> {

	@Override
	public Member get() {
		return this;
	}
	
	@Override
	public String getName() {
		return this.name;
	}
	
	@Override
	public void setName(String name) {
		this.name = name;
	}
	
	@Override
	public ImageIcon getIcon() {
		return this.icon;
	}
	
	@Override
	public void setIcon(ImageIcon icn) {
		this.icon = icn;
	}
	
	@Override
	public String getDescription() {
		return this.description;
	}
	
	@Override
	public void setDescription(String desc) {
		this.description = desc;
	}
	
	@Override
	public int getScore() {
		return this.score;
	}
	
	@Override
	public void setScore(int scr) {
		this.score = scr;
	}
	
	@Override 
	public Map getScores() {
		return this.scores;
	}
	
	@Override
	public void setScores(Map mp) {
		this.scores = mp;
	}
	
	public static List<Member> list = new ArrayList<Member>();
	private static final long serialVersionUID = 46L;
	
	String name;
	ImageIcon icon;
	String description;
	int score;
	Map<Event, Integer> scores;
	
	Team team;
	
	/**
	 * Creates new form Member
	 */
	private Member(String name, Team team) {
		this.name = name;
		this.icon = Palette.getCurrentScheme().ICON_DEFAULT_MEMBER.getIcon();
		this.description = "";
		this.scores = new HashMap<>();
		
		
		this.team = team;
		this.score = 0;
		
		
		initComponents();
	}
	
	public static Member add(String name, Team team) {
		name = name.trim();
		Member mem = new Member(name, team);
		
		mem.team.scores.put(mem, mem.score);
		Member.list.add(mem);
		
		return mem;
	}
	
	public void setScoreForEvent(Event evt, int scr) {
		this.scores.put(evt, scr);
		int total = this.scores.values().stream()
				.mapToInt(i -> i)
				.sum();
		this.score = total;
		this.team.scores.put(this, total);	
		
	}

	/**
	 * This method is called from within the constructor to initialize the form.
	 * WARNING: Do NOT modify this code. The content of this method is always
	 * regenerated by the Form Editor.
	 */
	@SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;

        nameLabel = new javax.swing.JLabel();
        iconLabel = new javax.swing.JLabel();

        setPreferredSize(new java.awt.Dimension(400, 35));
        setLayout(new java.awt.GridBagLayout());

        nameLabel.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        nameLabel.setForeground(Palette.getCurrentScheme().COLOR_PRIMARY_TEXT.getColor());
        nameLabel.setText(this.name);
        nameLabel.setBorder(javax.swing.BorderFactory.createEmptyBorder(5, 5, 5, 5));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        add(nameLabel, gridBagConstraints);

        iconLabel.setIcon(new ImageIcon(this.icon.getImage().getScaledInstance(32, 32, Image.SCALE_DEFAULT)));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        add(iconLabel, gridBagConstraints);
    }// </editor-fold>//GEN-END:initComponents

	
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel iconLabel;
    private javax.swing.JLabel nameLabel;
    // End of variables declaration//GEN-END:variables
}
